tosca_definitions_version: alien_dsl_3_0_0

metadata:
  template_name: Prometheus Monitoring
  template_version: 1.0.0
  template_author: Tri

description: "Create Prometheus monitoring with Grafana, node exporters, and alertmanagers"

imports:
  - otc-iaas:1.0.1
  - tosca-normative-types:1.0.0-ALIEN20
  - otc.servicecatalogs.prometheus:1.0.0

topology_template:
  node_templates:
    Private:
      metadata:
        a4c_edit_x: "-386"
        a4c_edit_y: "-41"
      type: otc.nodes.Network.Private
      properties:
        admin_network: false
        ip_version: 4
    Compute:
      metadata:
        a4c_edit_x: "-361"
        a4c_edit_y: 27
      type: tosca.nodes.Compute
      requirements:
        - bindsToPortBinding:
            type_requirement: binding
            node: Port
            capability: tosca.capabilities.network.Bindable
            relationship: tosca.relationships.network.BindsTo
      capabilities:
        host:
          properties:
            num_cpus: 1
            mem_size: "1 GB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
            version: 18.04
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            port: 22
            network_name: PRIVATE
            initiator: source
    Compute_2:
      metadata:
        a4c_edit_x: "-85"
        a4c_edit_y: 27
      type: tosca.nodes.Compute
      requirements:
        - bindsToPort_1Binding:
            type_requirement: binding
            node: Port_1
            capability: tosca.capabilities.network.Bindable
            relationship: tosca.relationships.network.BindsTo
      capabilities:
        host:
          properties:
            num_cpus: 1
            mem_size: "1 GB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
            version: 18.04
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Public:
      metadata:
        a4c_edit_x: "-515"
        a4c_edit_y: "-151"
      type: otc.nodes.Network.Public
      properties:
        ip_version: 4
    Port:
      type: tosca.nodes.network.Port
      properties:
        is_default: false
      requirements:
        - linksToPrivateLink:
            type_requirement: link
            node: Private
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
        - linksToPublicLink:
            type_requirement: link
            node: Public
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
    Port_1:
      type: tosca.nodes.network.Port
      properties:
        is_default: false
      requirements:
        - linksToPrivateLink:
            type_requirement: link
            node: Private
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
    PrometheusServer:
      type: otc.nodes.SoftwareComponent.Prometheus.PrometheusServer
      properties:
        component_version: "2.27.0"
        config_dir: "/etc/prometheus"
        db_dir: "/var/lib/prometheus"
        storage_retention: 30d
        storage_retention_size: 0
        global: 
          scrape_timeout: 10s
          scrape_interval: 1m
          evaluation_interval: 1m
      requirements:
        - scrapeMetricsFromNodeExporterNodeexporterScrape_endpoint:
            type_requirement: scrape_metrics_from_node_exporters
            node: NodeExporter
            capability: otc.capabilities.Endpoint.NodeExporter
            relationship: otc.relationships.prometheus.ScrapeMetricsFromNodeExporter
            properties:
              credential: 
                protocol: https
                token_type: "basic_auth"
                user: prometheus
                token: "AUTO_GENERATED"
        - addAlertManagerAlertmanagerAlertmanager_endpoint:
            type_requirement: add_alert_managers
            node: AlertManager
            capability: otc.capabilities.Endpoint.AlertManager
            relationship: otc.relationships.prometheus.AddAlertManager
        - hostedOnCompute2Host:
            type_requirement: host
            node: Compute_2
            capability: tosca.capabilities.Compute
            relationship: tosca.relationships.HostedOn
      capabilities:
        prometheus_endpoint:
          properties:
            port: 9090
            secure: true
            url_path: "/metrics"
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Grafana:
      type: otc.nodes.SoftwareComponent.Grafana
      properties:
        component_version: "8.2.2"
        logs_dir: "/var/log/grafana"
        data_dir: "/var/lib/grafana"
        security: 
          cookie_samesite: lax
          strict_transport_security_max_age_seconds: 86400
          strict_transport_security: false
          content_security_policy: false
          strict_transport_security_preload: false
          admin_password: admin
          cookie_secure: false
          x_content_type_options: false
          disable_gravatar: false
          strict_transport_security_subdomains: false
          x_xss_protection: false
          admin_user: admin
          disable_brute_force_login_protection: false
          allow_embedding: false
        server: 
          protocol: https
          enforce_domain: false
          cert_key: ""
          enable_gzip: false
          cert_file: ""
          router_logging: false
          static_root_path: public
          serve_from_sub_path: false
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: Compute
            capability: tosca.capabilities.Compute
            relationship: tosca.relationships.HostedOn
        - grafanaAddPrometheusPrometheusserverPrometheus_endpoint:
            type_requirement: add_datasource_prometheus
            node: PrometheusServer
            capability: otc.capabilities.Endpoint.Prometheus
            relationship: otc.relationships.prometheus.GrafanaAddPrometheus
      capabilities:
        grafana_endpoint:
          properties:
            port: 3000
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    NodeExporter:
      type: otc.nodes.SoftwareComponent.Prometheus.NodeExporter
      properties:
        component_version: "1.1.2"
        textfile_dir: "/var/lib/node_exporter"
        enabled_collectors: []
        disabled_collectors: []
      requirements:
        - hostedOnComputeHost:
            type_requirement: host
            node: Compute
            capability: tosca.capabilities.Compute
            relationship: tosca.relationships.HostedOn
      capabilities:
        scrape_endpoint:
          properties:
            port: 9100
            secure: true
            url_path: "/metrics"
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    AlertManager:
      type: otc.nodes.SoftwareComponent.Prometheus.AlertManager
      properties:
        component_version: "0.21.0"
        config_dir: "/etc/alertmanager"
        db_dir: "/var/lib/alertmanager"
        route: 
          group_interval: 5m
          receiver: slack
          group_wait: 30s
          repeat_interval: 3h
        receivers: 
          - name: slack
        resolve_timeout: 3m
      requirements:
        - hostedOnCompute2Host:
            type_requirement: host
            node: Compute_2
            capability: tosca.capabilities.Compute
            relationship: tosca.relationships.HostedOn
      capabilities:
        alertmanager_endpoint:
          properties:
            port: 9093
            secure: false
            protocol: tcp
            network_name: PRIVATE
            initiator: source
  outputs:
    AlertManager_private_url:
      value: { get_attribute: [ AlertManager, private_url ] }
    NodeExporter_private_url:
      value: { get_attribute: [ NodeExporter, private_url ] }
    PrometheusServer_private_url:
      value: { get_attribute: [ PrometheusServer, private_url ] }
    Grafana_public_url:
      value: { get_attribute: [ Grafana, public_url ] }
    Grafana_private_url:
      value: { get_attribute: [ Grafana, private_url ] }
