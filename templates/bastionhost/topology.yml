tosca_definitions_version: alien_dsl_2_0_0

metadata:
  template_name: Bastionhost
  template_version: 1.0.0
  template_author: Dr. Tri Vo
  template_documentation: "https://docs.otc.t-systems.com/cloud-create/umn/bastion_host/index.html"
  template_images:
    - /images/thumbnail.png
    - /images/image1.png

description: >
  This template demonstrates the usecase of the bastion host and the NAT gateway.
  The bastion host is used as a jump-host to access the private compute via the Admin Network.
  The private compute has the network port in the Data Network as the default port for outgoing traffic.
  The NAT gateway is used for SNAT outgoing traffic from the private compute.

imports:
  - tosca-normative-types:1.0.0-ALIEN20
  - otc-iaas:1.0.4
  - yorc-types:1.1.5
  - otc.paas.scripts:1.1.0
  - otc-yorc:1.0.0
  - otc.paas.scripts.common:1.0.0

topology_template:
  node_templates:
    Compute_2:
      metadata:
        a4c_edit_x: "-98"
        a4c_edit_y: "-112"
      type: otc.nodes.Compute
      requirements:
        - bindsToCompute_2_Port_0Binding:
            type_requirement: binding
            node: Compute_2_Port_0
            capability: tosca.capabilities.network.Bindable
            relationship: tosca.relationships.network.BindsTo
        - bindsToCompute_2_Port_1Binding:
            type_requirement: binding
            node: Compute_2_Port_1
            capability: tosca.capabilities.network.Bindable
            relationship: tosca.relationships.network.BindsTo
      capabilities:
        host:
          properties:
            gpu: false
            num_cpus: 1
            mem_size: "1 GB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    AdminNetwork:
      metadata:
        a4c_edit_x: "-527"
        a4c_edit_y: "-267"
      type: otc.nodes.Network.Private
      properties:
        admin_network: true
        cidr: "10.0.0.0/24"
        ip_version: 4
    BastionHost:
      metadata:
        a4c_edit_x: "-333"
        a4c_edit_y: "-112"
      type: otc.nodes.Compute
      requirements:
        - bindsToBastionHost_Port_0Binding:
            type_requirement: binding
            node: BastionHost_Port_0
            capability: tosca.capabilities.network.Bindable
            relationship: tosca.relationships.network.BindsTo
      capabilities:
        host:
          properties:
            gpu: false
            num_cpus: 1
            mem_size: "1 GB"
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            port: 22
            network_name: PRIVATE
            initiator: source
    SSHBastionHost:
      type: otc.nodes.SSHBastionHost
      requirements:
        - hostedOnBastionhostHost:
            type_requirement: host
            node: BastionHost
            capability: otc.capabilities.Compute
            relationship: tosca.relationships.HostedOn
      capabilities:
        bastion:
          properties:
            port: { get_property: [HOST, endpoint, port] }
            network_name: { get_property: [HOST, endpoint, network_name] }
            port_name: { get_property: [HOST, endpoint, port_name] }
            use_host_credentials: true
    NATGateway:
      metadata:
        a4c_edit_x: 144
        a4c_edit_y: "-112"
      type: otc.nodes.Network.NATGateway
      properties:
        spec: Small
      requirements:
        - networkDatanetworkConnection:
            type_requirement: network
            node: DataNetwork
            capability: tosca.capabilities.Connectivity
            relationship: tosca.relationships.Network
    SNATRule:
      type: otc.nodes.Network.SNATRule
      requirements:
        - hostedOnNatgatewayRules:
            type_requirement: nat_gateway
            node: NATGateway
            capability: otc.capabilities.Container.NATRules
            relationship: tosca.relationships.HostedOn
    Bash:
      type: otc.nodes.SoftwareComponent.Bash
      properties:
        component_version: 1.0
      requirements:
        - hostedOnCompute2Host:
            type_requirement: host
            node: Compute_2
            capability: otc.capabilities.Compute
            relationship: tosca.relationships.HostedOn
      capabilities:
        data_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
      artifacts:
        configure:
          file: artifacts/bash_configure.sh
          type: tosca.artifacts.Implementation.Bash
    BastionHost_Port_0:
      type: otc.nodes.Network.Port
      properties:
        ip_address: "10.0.0.2"
        is_default: false
      requirements:
        - linksToAdminNetworkLink:
            type_requirement: link
            node: AdminNetwork
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
        - linksToPublicLink:
            type_requirement: link
            node: Public
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
    DataNetwork:
      metadata:
        a4c_edit_x: "-520"
        a4c_edit_y: "-314"
      type: otc.nodes.Network.Private
      properties:
        admin_network: false
        cidr: "10.0.1.0/24"
        ip_version: 4
    Compute_2_Port_0:
      type: otc.nodes.Network.Port
      properties:
        is_default: true
      requirements:
        - linksToDataNetworkLink:
            type_requirement: link
            node: DataNetwork
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
        - dependsOnSgdatanetworkFeature:
            type_requirement: dependency
            node: sg_data_network
            capability: yorc.capabilities.SecurityGroup
            relationship: tosca.relationships.DependsOn
    Compute_2_Port_1:
      type: otc.nodes.Network.Port
      properties:
        ip_address: "10.0.0.3"
        is_default: false
      requirements:
        - linksToAdminNetworkLink:
            type_requirement: link
            node: AdminNetwork
            capability: tosca.capabilities.network.Linkable
            relationship: tosca.relationships.network.LinksTo
    Public:
      metadata:
        a4c_edit_x: "-563"
        a4c_edit_y: "-360"
      type: otc.nodes.Network.Public
      properties:
        ip_version: 4
    sg_data_network:
      metadata:
        a4c_edit_x: "-94"
        a4c_edit_y: 49
      type: yorc.nodes.SecurityGroup
      properties:
        name: "sg-data-network"
        delete_default_rules: false
    sgr_your_rule:
      type: yorc.nodes.SecurityGroupRule
      properties:
        name: "sgr-web"
        protocol: tcp
        direction: inbound
        from_port: 8080
        to_port: 8080
        remote: "0.0.0.0/0"
      requirements:
        - secGroupRuleHostedOnSecGroupSgdatanetworkHost:
            type_requirement: host_on_security_group
            node: sg_data_network
            capability: yorc.capabilities.SecurityGroupRules
            relationship: yorc.relationships.SecGroupRuleHostedOnSecGroup
  outputs:
    Compute_2_private_address:
      value: { get_attribute: [ Compute_2, private_address ] }
    Compute_2_Port_0_private_address:
      value: { get_attribute: [ Compute_2_Port_0, private_address ] }
    BastionHost_private_address:
      value: { get_attribute: [ BastionHost, private_address ] }
    BastionHost_public_address:
      value: { get_attribute: [ BastionHost, public_address ] }
    Compute_2_Port_1_private_address:
      value: { get_attribute: [ Compute_2_Port_1, private_address ] }